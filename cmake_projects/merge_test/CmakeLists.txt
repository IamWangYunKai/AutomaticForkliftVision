cmake_minimum_required (VERSION 3.0)

#项目名称
SET(PROJ_NAME "Merge")
project (${PROJ_NAME})
# PCL库
find_package( PCL 1.8.0 REQUIRED )
# 头文件
file(GLOB INCLUDE_DIRS ${CMAKE_CURRENT_LIST_DIR}/include/third_party/pmdsdk/include
                       ${CMAKE_CURRENT_LIST_DIR}/include/third_party/xmlrpc/include
                       ${CMAKE_CURRENT_LIST_DIR}/include/third_party/xmlrpc/lib/expat/xmlparse
                       ${CMAKE_CURRENT_LIST_DIR}/include/third_party/xmlrpc/lib/util/include
                       ${CMAKE_CURRENT_LIST_DIR}/include/third_party/xmlrpc/lib
                       ${CMAKE_CURRENT_LIST_DIR}/include/third_party/xmlrpc/examples
                       ${CMAKE_CURRENT_LIST_DIR}/include/third_party/xmlrpc
                       ${CMAKE_CURRENT_LIST_DIR}/include/source_plugin/include
                       ${PCL_INCLUDE_DIRS}
                    )
# 源文件
file(GLOB SOURCE "${CMAKE_CURRENT_LIST_DIR}/src/*.*")
# 库文件
file(GLOB LIB_DIRS ${PCL_LIBRARY_DIRS}
                    AdvAPI32.Lib
                    ComDlg32.Lib
                    Gdi32.Lib
                    Kernel32.Lib
                    Ole32.Lib
                    OleAut32.Lib
                    shell32.lib
                    User32.Lib
                    Uuid.Lib
                    WinSpool.Lib
                    )
# 链接文件
file(GLOB LINK_DIRS ${CMAKE_CURRENT_LIST_DIR}/include/third_party/pmdsdk/lib/pmdaccess2.lib)
# DLL文件
file(GLOB DLL_DIRS ${CMAKE_CURRENT_LIST_DIR}/include/third_party/pmdsdk/bin/pmdaccess2.dll)
# plugins文件
file(GLOB PLUGINS_DIRS ${CMAKE_CURRENT_LIST_DIR}/include/plugins/O3D3xxCamera.W64.pap
                       ${CMAKE_CURRENT_LIST_DIR}/include/plugins/O3D3xxProc.W64.ppp )

# 添加头文件
include_directories(${INCLUDE_DIRS})
# 添加库文件
link_directories(${LIB_DIRS})
# 添加预处理的宏
add_definitions(${PCL_DEFINITIONS})

# 编译输出路径
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_LIST_DIR}/bin)

# 添加源文件
add_executable(${PROJ_NAME} ${SOURCE})

# 添加链接库
target_link_libraries(${PROJ_NAME} ${LINK_DIRS} ${PCL_LIBRARIES})

# 复制dll文件到执行文件目录下
file(COPY ${DLL_DIRS} DESTINATION ${EXECUTABLE_OUTPUT_PATH})
file(COPY ${PLUGINS_DIRS} DESTINATION ${EXECUTABLE_OUTPUT_PATH})