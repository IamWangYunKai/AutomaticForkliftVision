cmake_minimum_required (VERSION 3.0)

#项目名称
project (HelloWorld)

#默认是多字节模式，设置成unicode模式
add_definitions(-D_UNICODE)

#把当前目录(CMakeLists.txt所在目录)下的include文件夹加入到包含路径
include_directories(${CMAKE_CURRENT_LIST_DIR}/include)

#把当前路径下src目录下的所有源文件路径放到变量中
aux_source_directory("${CMAKE_CURRENT_LIST_DIR}/src" hello_src)

#添加了库包含路径
link_directories(${CMAKE_CURRENT_LIST_DIR}/lib)

#告诉CMake我要链接哪个库文件
#target_link_libraries(${PROJECT_NAME} util)

#传递FLAGS给C++编译器
#set(CMAKE_CXX_COMPILER      "clang++" )         # 显示指定使用的C++编译器
#set(CMAKE_CXX_FLAGS   "-std=c++11")             # c++11
#set(CMAKE_CXX_FLAGS   "-g")                     # 调试信息
#set(CMAKE_CXX_FLAGS   "-Wall")                  # 开启所有警告
#set(CMAKE_CXX_FLAGS_DEBUG   "-O0" )             # 调试包不优化
#set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG " )   # release包优化
#设置静态编译release模式
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")

#告诉CMake我的构建目标
add_executable(run "${hello_src}")