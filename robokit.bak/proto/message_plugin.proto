syntax = "proto3";
package rbk.protocol;

message Message_PluginRequest {
  enum Operation {
    REG = 0;         // 注册
    UNREG = 1;       // 反注册
    REQUIREMENT = 2; // 需求
    WITHDRAW = 3;    // 取消需求
  }
  Operation operation = 1;
  Message_PluginInfo plugin_info = 2;  // 只有 operation = REG 时才有
  Message_Requirement requirement = 3; // 只有 operation = REQUIREMENT 或者 WITHDRAW 时才有
}

message Message_PluginResponse {
  enum Status {
    FAILED = 0;   // 失败
    SUCCESS = 1;  // 成功
    CONNECT = 2;  // 连接
    DISCONNECT = 3; // 断开连接
  }
  Status status = 1;
  string msg = 2; // 错误信息，只有 status ＝ FAILED 时才有
  Message_Connect connect = 3; // 建立连接的信息，只有 status = CONNECT 时才有
  Message_Disconnect disconnet = 4;    // 只有 status = DISCONNECT 时才有
}

enum Protocol {
  NONE = 0;     // 不提供消息
  ALL = 1;      // 所有协议均可
  JSON = 2;     // JSON协议
  PROTOBUF = 3; // google protobuf 协议
}

message Message_PluginInfo {
  string id = 1;           // plugin 所属的 robot id，不可为空
  string ip = 2;           // plugin 的 ip，不可为空
  int32 port = 3;          // plugin 的 port，不可为空
  string plugin_name = 4;  // 不可为空
  string version = 5;      // plugin 的版本，可为空
  bool active = 6;         // plugin 是否激活，可为空
  map<string, Protocol> topics = 7; // 以消息名为键值的Map，可为空
}

message Message_Requirement {
  string id = 1;            // 需求的数据所属的机器人 id，可为空
  string ip = 2;            // 需求的数据所在的 ip，可为空
  string plugin_name = 3;   // 需求的数据所属的 plugin，可为空
  string topic = 4;         // 需求的数据的消息名，不可为空
  string self_ip = 5;       // 需求方自己的 ip，不可为空
  int32 self_port = 6;      // 需求方自己的端口，需求方需要监听此端口开接受可能到来的数据，不可为空
  Protocol protocol = 7;    // 需求方可接受的协议，不可为空
}

message Message_Connect {
  string ip = 1;            // 被连接者的 ip，不可为空
  int32 port = 2;           // 被连接者的端口，不可为空
  string topic = 3;         // 发送的 topic，不可为空
  Protocol protocol = 4;    // 发送的协议，不可为空
  string uuid = 5;          // 连接的唯一标识符，Node需要保存该 uuid，以便连接断开时通过Message_Disconnect发送给core，不可为空
}

message Message_Disconnect {
  string uuid = 1;   // Message_Connect 中的 uuid，不可为空
}

message Message_PluginParam {
  string pluginname = 1;
  string key = 2;
  string type = 3;
  bytes value = 4;
}